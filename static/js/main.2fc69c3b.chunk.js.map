{"version":3,"sources":["components/logo/logo.js","components/navbar/navbar.js","components/loader/loader.js","layout/layout.js","components/modal/backdrop/backdrop.js","components/modal/modal.js","store/actions/authActions.js","store/actions/actionTypes.js","components/todos/addTodo.js","store/actions/todoActions.js","components/todos/deleteTodo.js","components/todos/todo.js","components/todos/todos.js","components/auth/login/login.js","components/auth/signup/signup.js","components/auth/logout/logout.js","components/auth/verifyEmail/verifyEmail.js","components/auth/recoverPassword/recoverPassword.js","components/auth/profile/profile.js","App.js","serviceWorker.js","Firebase/firebase.js","store/reducers/authReducer.js","store/reducers/todosReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["LogoWrapper","styled","div","Logo","NavWrapper","Nav","nav","NavItems","ul","Navbar","links","loggedIn","uid","to","Spiner","Loader","MainWrapper","LoaderContainer","connect","firebase","auth","authIsLoaded","isLoaded","children","Fragment","Wrapper","opened","Backdrop","close","onClick","WrapperModal","Modal","ReactDOM","createPortal","document","getElementById","clean","type","AddTodoSchema","Yup","shape","todo","required","min","mapDispatchToProps","addTodo","data","dispatch","getState","a","getFirestore","firestore","userId","newTodo","id","Date","valueOf","collection","doc","set","todos","FieldValue","arrayUnion","merge","payload","message","loading","error","useState","isOpened","setIsOpened","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","isSubmitting","isValid","style","display","flexDirection","height","color","name","placeholder","width","justifyContent","disabled","backgroundColor","Controls","DeleteTodo","show","editStyles","background","flexGrow","padding","deleteStyles","Todo","isDeleting","setIsDeleting","className","TodosWrapper","TodosContainer","Todos","todoId","useFirestoreConnect","content","myTodos","useSelector","ted","status","requesting","requested","map","key","LoginContainer","FormWrapper","Recover","LoginScheme","email","password","login","getFirebase","signInWithEmailAndPassword","console","log","cleanUp","actions","useEffect","SignupContainer","SignupScheme","firstName","max","lastName","confirmPassword","oneOf","signUp","createUserWithEmailAndPassword","res","user","currentUser","sendEmailVerification","logout","signOut","mapDispacthToProps","sendVerification","verifyEmail","RecoverSchema","RecoverContainer","recoverPassword","sendPasswordResetEmail","ProfileScheme","when","is","then","editProfile","userEmail","updateEmail","length","updatePassword","deleteUser","delete","profileEdit","loadingDeleteUser","errorDeleteUser","modalOpened","setModalOpened","profile","fontWeight","emailVerified","routes","exact","path","component","VerifyEmail","Logout","Profile","Login","Sigunp","RecoverPassword","Boolean","window","location","hostname","match","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initialState","authStart","state","authEnd","authFail","authSuccess","verifyStart","verifySuccess","verifyFail","recoveryStart","recoverySuccess","recoveryFail","profileEditStart","profileEditSuccess","profileEditFail","deleteStart","deleteFail","authReducer","action","todosReducer","combineReducers","firebaseReducer","firestoreReducer","composeEnhancers","compose","store","createStore","rootReducer","reduxFirestore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2fc69c3b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst LogoWrapper = styled.div`\n    padding: 10px;\n    font-weight: 800;\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    width: 100%;\n`;\n\n\nconst Logo = () => {\n    return (\n        <LogoWrapper>\n            ToDos Locos\n        </LogoWrapper>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../logo/logo';\nimport { NavLink } from 'react-router-dom';\n\n \nconst NavWrapper = styled.div`\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 60px;\n    background-color: orange; \n    display: flex;\n    padding: 0 20px;\n`\n\nconst Nav = styled.nav`\n    display: flex;\n    flex-grow: 1;\n    width: 100%;\n`;\n\nconst NavItems = styled.ul` \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding-left: 0px;\n    width: 100%;\n    li{\n        display: flex;\n        padding: 0 15px;\n        font-weight: 800;\n        a{\n            text-decoration: none;\n            color: black;\n        }\n    }\n`;\n\nconst Navbar = ({ loggedIn }) => {\n    let links;\n    if(loggedIn.uid){\n        links = ( \n            <NavItems>\n                {/* <li>\n                    <NavLink to=\"/todos-locos\">Home</NavLink>\n                </li> */}\n                <li>\n                    <NavLink to=\"/todos-locos\">Todos</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/todos-locos/profile'>Profile</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/todos-locos/logout'>Logout</NavLink>\n                </li>\n            </NavItems>\n        )\n    }else{\n        links = (\n            <NavItems>\n                {/* <li>\n                    <NavLink to=\"/todos-locos\">Home</NavLink>\n                </li> */}\n                {/* <li>\n                    <NavLink to=\"/todos-locos\">Todos</NavLink>\n                </li> */}\n                <li>\n                    <NavLink to='/todos-locos/login'>Login</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/todos-locos/signup'>Signup</NavLink>\n                </li>\n            </NavItems>\n        )\n    }\n    return(\n        <NavWrapper>\n            <Logo/>\n            <Nav>{links}</Nav>\n        </NavWrapper>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Spiner = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n    & div{\n        position: absolute;\n        border: 4px solid orange;\n        opacity: 1;\n        border-radius: 50%;\n        animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n        &:nth-child(2){\n            animation-delay: -0.5s;\n        }\n    }\n    /* & div:nth-child(2){\n        animation-delay: -0.5s;\n    } */\n    @keyframes lds-ripple {\n    0% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 1;\n    }\n    100% {\n        top: 0px;\n        left: 0px;\n        width: 72px;\n        height: 72px;\n        opacity: 0;\n    }\n    }\n`\n\nconst Loader = () => {\n    return(\n        <Spiner>\n            <div></div>\n            <div></div>\n        </Spiner>\n    )\n};\n\nexport default Loader;","import React from 'react';\nimport styled from 'styled-components'\nimport Navbar from '../components/navbar/navbar';\n\nimport { connect } from 'react-redux';\nimport Loader from '../components/loader/loader';\n\nconst MainWrapper = styled.div`\n    width: 100%;\n    margin-top: 60px;\n    height: 100%;\n    background-color: rgb(248, 248, 250);\n`\n\nconst LoaderContainer = styled.div`\n    height: calc(100% + 60px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Layout = ({ children, loggedIn, authIsLoaded }) => {\n    // console.log(children);\n    // console.log(`is logged in: ${JSON.stringify(loggedIn,null, 2)}`);\n    // console.log(`is loaded: ${authIsLoaded}`);\n    if(!authIsLoaded) return <LoaderContainer><Loader/></LoaderContainer>\n    return (\n        <React.Fragment>\n            <Navbar loggedIn={loggedIn}/>\n            <MainWrapper>{children}</MainWrapper>\n        </React.Fragment>\n    )\n};\n\nconst mapStateToProps = ({firebase}) => ({\n    loggedIn: firebase.auth,\n    authIsLoaded: firebase.auth.isLoaded\n})\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0%;\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.7);\n    opacity: ${({opened}) => (opened ? '1' : '0')};\n    visibility: ${({opened}) => (opened ? 'visible' : 'hidden')};\n    transition: all 0.1s;\n    z-index: 100;\n`;\n\n\nconst Backdrop = ({opened, close}) => {\n    return (\n        <Wrapper onClick={close} opened={opened}/>\n    )\n}\nexport default Backdrop;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport Backdrop from './backdrop/backdrop'\n\nconst WrapperModal = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: ${({opened}) => opened ? 'translate(-50%, -50%)' : 'translate(-50%, -150%)'};\n    opacity: ${({opened}) => opened ? '1': '0'};\n    visibility: ${({opened}) => opened ? 'visible': 'hidden'};\n    width: 100%;\n    color: white;\n    max-width: 700px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    /* box-shadow: 0 10px 5px orange; */\n    transition: all .5s;\n    z-index: 150;\n    padding: 40px 30px;\n    background-color: orange;\n`\n\nconst Modal = ({opened, close, children}) => {\n    return ReactDOM.createPortal(\n        <>\n        <Backdrop close={close} opened={opened}></Backdrop>\n        <WrapperModal opened={opened}>{children}</WrapperModal>\n        </>,\n        document.getElementById('root-modal')\n    );\n}\n\nexport default Modal;","import * as actions from './actionTypes'\n\n//singup action creator\nexport const signUp = data => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        dispatch({type: actions.AUTH_START})\n        try{\n            const res = await firebase\n                .auth()\n                .createUserWithEmailAndPassword(data.email, data.password);\n                // console.log(res);\n\n            //send verification email\n            const user = firebase.auth().currentUser;\n            await  user.sendEmailVerification()\n\n            await firestore\n                .collection('users')\n                .doc(res.user.uid)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                })\n            dispatch({ type: actions.AUTH_SUCCESS})    \n        } catch(err){\n            dispatch({ type: actions.AUTH_FAIL, payload: err.message })\n            // console.log('Somwthing wrong happened: ', err.message);\n        }\n        dispatch({type: actions.AUTH_END})\n    }\n};\n\n//logout action creator\nexport const signOut = () => {\n    return async (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        try{\n            await firebase.auth().signOut();\n        }catch(err){\n            console.log(err.message);\n        }\n    }\n}\n\n//login action creator\nexport const signIn = (data) => {\n    return async (dispatch, getState, { getFirebase}) => {\n        const firebase = getFirebase();\n        dispatch({type: actions.AUTH_START})\n        try{\n            await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\n            dispatch({ type: actions.AUTH_SUCCESS})  \n        }catch(err){\n            console.log(err.message);\n            dispatch({ type: actions.AUTH_FAIL, payload: err.message })\n        }\n        dispatch({type: actions.AUTH_END})\n    }\n};\n\n//clean up error messages \nexport const clean = () => {\n    return ({ type: actions.CLEAN_UP })\n};\n\n//verify email action\nexport const verifyEmail = () => {\n    return async (dispatch, getState,  { getFirebase }) => {\n        const firebase = getFirebase();\n        dispatch({ type: actions.VERIFY_START })\n        try {\n            const user = firebase.auth().currentUser;\n            await user.sendEmailVerification();\n            dispatch({ type: actions.VERIFY_SUCCESS })\n        }catch(err){\n            console.log(err.message);\n            dispatch({ type: actions.VERIFY_FAIL, payload: err.message })\n        }\n    }\n}\n\n//send recovery password\nexport const recoverPassword = (data) => { \n    return async (dispatch, getState,  { getFirebase }) => {\n        const firebase = getFirebase();\n        dispatch({ type: actions.RECOVERY_START})\n        try {\n            await firebase.auth().sendPasswordResetEmail(data.email);\n            dispatch({ type: actions.RECOVERY_SUCCESS})\n        }catch(err){\n            dispatch({ type: actions.RECOVERY_FAIL, payload: err.message })\n        }\n    }\n}\n\n//edit profile\nexport const editProfile = data => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        const user = firebase.auth().currentUser;\n        // const userEmail = getState().firebase.auth.email;\n        // const userUID = getState().firebase.auth.uid;\n        const { uid: userId, email: userEmail } = getState().firebase.auth;\n        dispatch({ type: actions.PROFILE_EDIT_START})\n\n        try{\n            if(data.email !== userEmail){\n                await user.updateEmail(data.email)\n            }\n            await firestore.collection('users').doc(userId).set({\n                firstName: data.firstName,\n                lastName: data.lastName\n            })\n            if(data.password.length > 0){\n                await user.updatePassword(data.password)\n            }\n            dispatch({ type: actions.PROFILE_EDIT_SUCCESS})\n        }catch(err){\n            dispatch({ type: actions.PROFILE_EDIT_FAIL, payload: err.message})\n        }\n    }\n}\n\n//delete user\nexport const deleteUser = () => {\n    return async(dispatch, getState, { getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        const user = firebase.auth().currentUser;\n        const userId = getState().firebase.auth.uid;\n        dispatch({ type: actions.DELETE_USER_START })\n        try{\n            await firestore.collection('users').doc(userId).delete();\n            await user.delete();\n        }catch(err){\n            dispatch({ type: actions.DELETE_USER_FAIL, payload: err.message })\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_END = 'AUTH_END';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const CLEAN_UP = 'CLEAN_UP';\n\nexport const VERIFY_START = 'VERIFY_START';\nexport const VERIFY_SUCCESS = 'VERIFY_SUCCESS';\nexport const VERIFY_FAIL = 'VERIFY_FAIL';\n\nexport const RECOVERY_START = 'RECOVERY_START';\nexport const RECOVERY_SUCCESS = 'RECOVERY_SUCCESS';\nexport const RECOVERY_FAIL = 'RECOVERY_FAIL';\n\nexport const PROFILE_EDIT_START = 'PROFILE_EDIT_START';\nexport const PROFILE_EDIT_SUCCESS = 'PROFILE_EDIT_SUCCESS';\nexport const PROFILE_EDIT_FAIL = 'PROFILE_EDIT_FAIL';\n\nexport const DELETE_USER_START = 'DELETE_USER_START';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\n\nexport const ADD_TODO_START = 'ADD_TODO_START';\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport const ADD_TODO_FAIL = 'ADD_TODO_FAIL';","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Modal from '../modal/modal'\nimport * as actions from '../../store/actions';\n\n\nconst AddTodoSchema = Yup.object().shape({\n    todo: Yup.string()\n        .required('The content is required')\n        .min(4, 'Too short...')\n})\n\nconst AddTodo = ({loading, error, addTodo}) => {\n    const [isOpened, setIsOpened] = useState(false);\n    return (\n        <div>\n            <button onClick={() => setIsOpened(true)}>Add todo</button>\n            <Modal opened={isOpened} close={() => setIsOpened(false)}>\n                <h1>Add your new ToDo</h1>\n                <h3>Type your ToDo and press ADD</h3>\n                <div>\n                    <Formik \n                        initialValues={{\n                            todo: ''\n                        }} \n                        validationSchema={AddTodoSchema} \n                        \n                        onSubmit= {async (values, {setSubmitting, resetForm}) =>{\n                            const res = await addTodo(values) \n                            if(res) {\n                                setIsOpened(false);\n                            }\n                            setSubmitting(false)\n                            resetForm();\n                        }}>\n                        {({isSubmitting, isValid}) => (\n                            <Form>\n                                <div style={{display: 'flex', flexDirection: 'column', height: '40px', color: 'red'}}>\n                                    <Field type='text' name='todo' placeholder='Type your todo'/>\n                                    <ErrorMessage  name='todo'/>\n                                </div>\n                                <div style={{display: 'flex', width: '100%', justifyContent: 'space-evenly'}}>\n                                    <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Adding...' :'ADD'}</button>\n                                    <button type='button' onClick={() => setIsOpened(false)}>Cancel</button>\n                                </div>\n                                {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>}\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n                {/* {errorDeleteUser && <p style={{color: 'red', fontWeight: '800'}}>{errorDeleteUser}</p>} */}\n            </Modal>\n        </div>\n    )\n};\n\nconst mapStateToProps = ({ todos }) => ({\n    loading: todos.loading, \n    error: todos.error\n})\n\nconst mapDispatchToProps = {\n    addTodo: actions.addTodo\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);","import * as actions from './actionTypes';\n\n//add a todo\nexport const addTodo = data => {\n    return async (dispatch, getState, { getFirestore}) => {\n        const firestore = getFirestore();\n        const userId = getState().firebase.auth.uid;\n        dispatch({ type: actions.ADD_TODO_START})\n        try {\n            //const currentTodos = await firestore.collection('todos').doc(userId).get();\n            \n            // if(!currentTodos.exists){\n            //     firestore.collection('todos').doc(userId).set({\n            //         todos: firestore.FieldValue.arrayUnion(data.todo)\n            //         // todos: []\n            //     })\n            // }\n\n            const newTodo = {\n                id: new Date().valueOf(),\n                todo: data.todo\n            };\n            \n            await firestore.collection('todos').doc(userId).set({\n                // todos: [...currentTodos.data().todos, newTodo]\n                todos: firestore.FieldValue.arrayUnion(newTodo)\n            },{ merge: true })\n            \n            dispatch({ type: actions.ADD_TODO_SUCCESS})\n\n            return true;\n            \n        } catch(err){\n            dispatch({ type: actions.ADD_TODO_FAIL, payload: err.message })\n        }\n    }\n}","import React from 'react';\nimport Modal from '../modal/modal'\nimport styled from 'styled-components';\n\nconst Controls = styled.div`\n    margin-top: 10px;\n    display: flex;\n`;\n\nconst DeleteTodo = ({ show, close, todo}) => {\n    return(\n        <div>\n            <Modal opened={show} close={close}>\n                {todo.todo}\n                <Controls>\n                    <button>Delete</button>\n                    <button onClick={close}>Cancel</button>\n                </Controls>\n            </Modal>\n        </div>\n    )\n}\n\nexport default DeleteTodo;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport DeleteTodo from '../todos/deleteTodo'\n\nconst Wrapper = styled.div`\n    width: 300px;\n    /* background-color: yellow; */\n    position: relative;\n    border: 1px solid black;\n    padding: 10px 20px 20px;\n    margin: 5px 0px;\n    text-align: center;\n    p{\n        /* font-family: 'Arial'; */\n        font-size: 20px;\n        /* font-weight: 100; */\n        \n    }\n`;\n\nconst Controls = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    /* padding: 5px 0; */\n    cursor: pointer;\n    i {\n        color: rgb(248, 248, 250);\n    }\n    i:hover{\n        color: yellow;\n    }\n`;\n\nconst editStyles = {\n    background: 'rgba(0, 200, 0, 1)',\n    // color: 'rgb(248, 248, 250)',\n    flexGrow: '1',\n    padding: '5px 0',\n};\n\nconst deleteStyles = {\n    background: 'rgba(230, 0, 0, 1)',\n    // color: 'orange',\n    flexGrow: '1',\n    // color: 'rgb(248, 248, 250)',\n    padding: '5px 0',\n}\n\n\nconst Todo = ({todo}) => {\n    const [isDeleting, setIsDeleting ] = useState(false)\n    return(\n        <Wrapper>\n            <p>{todo.todo}</p>\n            <Controls>\n            <i className=\"far fa-edit\" style={editStyles}/>\n            <i className=\"far fa-trash-alt\" style={deleteStyles} onClick={() => setIsDeleting(true)}/>\n            <DeleteTodo \n                show={isDeleting} \n                close={() => setIsDeleting(false)} \n                todo={todo}    \n            />\n            </Controls>\n        </Wrapper>\n    )\n}\n\nexport default Todo;","import React from 'react';\nimport styled from 'styled-components';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux'\nimport { compose } from 'redux'\n\nimport AddTodo from './addTodo';\nimport Loader from '../../components/loader/loader';\nimport Todo from './todo';\n\nconst TodosWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    /* background-color: red; */\n    display: flex;\n    flex-direction: column;\n    /* justify-content: center; */\n    h1{\n        text-align: center;\n    }\n\n`;\nconst TodosContainer = styled.div`\n    /* background-color: green; */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Todos = () => {   \n\n    const todoId = 'Qkw18cnqIKPnugsRwdcYqfogiAp1';\n\n    useFirestoreConnect(() => [\n        { collection: 'todos', doc: todoId } // or `todos/${props.todoId}`\n      ])\n    const myTodos = useSelector(({ firestore: { data } }) => data.todos && data.todos[todoId].todos)\n    const ting = useSelector(({firestore: { status }}) => status.requesting[`todos/${todoId}`])\n    const ted = useSelector(({firestore: { status }}) => status.requested[`todos/${todoId}`])\n    // useFirestoreConnect(() => [{collection: 'todos', doc: userId}])\n    // const myTodos = useSelector( ({ firestore: {data} }) =>  data.todos &&  data.todos[userId].todos)\n\n    // console.log(requesting)\n    // console.log(myTodos);\n    // console.log(ting);\n    // console.log(ted);\n\n    let content;\n    if(!myTodos){\n        content = <Loader/>\n    }else if(!myTodos && ted){\n        content = <p>You have no todos</p>\n    }else{\n        content = myTodos.map( todo => <Todo key={todo.id} todo={todo}/>)\n    }\n/*\n    if(!todos){\n        content = <Loader/>\n    }else if(!todos[userId] && requested[`todos/${userId}`]){\n        content = <p>'You have no todos'</p>;\n    }else{\n        content = todos[userId].todos.map(todo => <Todo key={todo.id} todo={todo}/>)\n        content = myTodos.map(todo => <Todo key={todo.id} todo={todo}/>)\n    }\n*/\n\n    return (\n        <TodosWrapper>\n            <h1>Your ToDos</h1>\n            <TodosContainer>\n                <AddTodo/>\n                {content}\n            </TodosContainer>\n        </TodosWrapper>\n    )\n}\n\n// const mapStateToProps = ({ firebase, firestore }) => ({\n//     userId: firebase.auth.uid,\n//     todos: firestore.data.todos,\n//     requesting: firestore.status.requesting,\n//     requested: firestore.status.requested\n// })\n\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect(props => [`todos/${props.userId}`])\n// )(Todos);\n\n// export default connect(mapStateToProps)(Todos);\nexport default Todos;\n\n\n// export default compose(\n//     firestoreConnect((props) => [\n//       { collection: 'todos', doc: props.todoId } // or `todos/${props.todoId}`\n//     ]),\n//     connect(({ firestore: { data } }, props) => ({\n//       todos: data.todos && data.todos[todoId]\n//     }))\n//    )(SomeComponent)","import React, { useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../store/actions'\nimport { NavLink } from 'react-router-dom';\n\nconst LoginContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    width: 500px;\n`;\n\nconst Recover = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    & a {\n        align-self: center;\n        text-decoration: none;\n        margin-left: 3px;\n    }\n`;\n\nconst LoginScheme = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'Too short password')\n});\n\nconst Login = ({loading, error, login, cleanUp}) => {\n    useEffect(() => {\n        //when mounts\n        \n        //when unmounts\n        return() => {\n            cleanUp();\n        }\n    },[cleanUp])\n    return(\n        <LoginContainer>\n        <Formik \n            initialValues={{email: '', password: ''}} \n            validationSchema={LoginScheme} \n            // onSubmit={async (values, {setSubmitting}) =>{ //this is causing an error: Can't perform a React state update on an unmounted component.This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n            //     await login(values);\n            //     setSubmitting(false)\n            // }}>\n            onSubmit={ (values, {setSubmitting}) =>{\n                login(values);\n                setSubmitting(false)\n            }}>\n            {({isSubmitting, isValid}) => (\n                <FormWrapper>\n                    <p>Login</p>    \n                    <Form>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='email' name='email' placeholder='Your email..'/>\n                            <ErrorMessage name='email'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='password' name='password' placeholder='Your password...'/>\n                            <ErrorMessage name='password'/>\n                        </div>\n                        <div style={{display: 'flex'}}>\n                            <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Loggin in...' :'Login'}</button>\n                            <Recover>\n                                <NavLink to='/todos-locos/recover-password'>Recover password</NavLink>\n                            </Recover>\n                        </div>\n                        \n                        {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>}\n                    </Form>\n                </FormWrapper>\n            )}\n        </Formik>\n        </LoginContainer>\n    )\n}\n\nconst mapStateToProps = ({auth}) => ({\n    loading: auth.loading,\n    error: auth.error\n})\n\nconst mapDispatchToProps = {\n    login: actions.signIn,\n    cleanUp: actions.clean\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions'\n\n\nconst SignupContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 60px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 500px;\n    text-align: center;\n`;\n\nconst SignupScheme = Yup.object().shape({\n    firstName: Yup.string()\n        .required('First name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    lastName: Yup.string()\n        .required('Last name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'The password is too short'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Password doesnt match')\n        .required('You need to confirm your password')\n});\n\nconst Signup = ({ signUp, loading, error, cleanUp }) => {\n    useEffect(() => {\n        //when mounts\n\n        //when unmounts\n        // return() => {\n            cleanUp();\n        // }\n    },[cleanUp])\n    return(\n        <SignupContainer>\n            <Formik \n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    email: '', \n                    password: '',\n                    confirmPassword: ''\n                }} \n                validationSchema={SignupScheme} \n                // onSubmit={async (values, {setSubmitting}) => {\n                //     console.log(values);\n                //     await signUp(values);\n                //     setSubmitting(false);\n                // }}>\n                //error: Can't perform a React state update on an unmounted component. \n                onSubmit={(values, {setSubmitting}) => {\n                    // console.log(values);\n                    signUp(values);\n                    setSubmitting(false);\n                }}>\n                {({isSubmitting, isValid}) => (\n                    <FormWrapper>\n                        <p>Sign up</p>\n                        <Form>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px', width: '100%'}}>\n                                <Field type='text' name='firstName' placeholder='Your first name..'/>\n                                <ErrorMessage name='firstName'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='text' name='lastName' placeholder='Your last name..'/>\n                                <ErrorMessage name='lastName'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='email' name='email' placeholder='Your email..'/>\n                                <ErrorMessage name='email'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='password' name='password' placeholder='Your password...'/>\n                                <ErrorMessage name='password'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='password' name='confirmPassword' placeholder='Confirm password...'/>\n                                <ErrorMessage name='confirmPassword'/>\n                            </div>\n                            <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Signing up...' :'Submit'}</button>\n                            {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>}\n                        </Form>\n                    </FormWrapper>\n                )}\n            </Formik>\n        </SignupContainer>\n    )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error\n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp,\n    cleanUp: actions.clean\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions' //has index.js so!\n\nconst Logout = ({ logout }) => {\n    useEffect(() => {\n        logout()\n    }, [logout])\n\n    return null;\n}\n\nconst mapDispatchToProps = {\n    logout: actions.signOut\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions'\n\nconst VerifyEmail = ({ error, loading, sendVerification, cleanUp }) => {\n    // console.log(error);\n    useEffect(() => {\n        //when component mounts\n\n        return () => { //when component unmounts\n            cleanUp()\n        }\n    }, [cleanUp])\n    return(\n        <div>\n        <h2>You are not verified...</h2>\n        <p>Go to your mail inbox and pls verify the email..</p>\n        <button disabled={loading} onClick={sendVerification}>{ loading ? \"Sending email...\" : \"Re-send verification email...\"}</button>\n        {!error \n            ? error === false ? <p>Message sent succesfully</p> : <p>{error}</p> \n            : <p>{error}</p>\n        }\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => ({\n    loading: auth.verifyEmail.loading,\n    error: auth.verifyEmail.error\n})\n\nconst mapDispacthToProps = {\n    sendVerification: actions.verifyEmail,\n    cleanUp: actions.clean\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(VerifyEmail); ","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions';\n\nconst RecoverSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required')\n});\n\nconst RecoverContainer = styled.div`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 60px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 500px;\n    text-align: center;\n`;\n\nconst RecoverPassword = ({loading, error, recoverPassword}) => {\n    // console.log(error);\n    return(\n        <RecoverContainer>\n            <Formik\n                initialValues={{ email: '' }}\n                validationSchema = {RecoverSchema}\n                onSubmit={(values, {setSubmitting}) => {\n                    // console.log('Send email to recover')\n                    recoverPassword(values)\n                    setSubmitting(false)\n                }}\n            >\n            {({isSubmitting, isValid}) => (\n                <FormWrapper>\n                    <h2>Recover password</h2>\n                    <Form>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px', width: '100%'}}>\n                            <Field type='email' name='email' placeholder='Enter email...'/>\n                            <ErrorMessage name='email'/>\n                        </div>\n                        <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Sending recover email..' :'Recover email'}</button>\n                        {!error \n                            ? error === false ? <p>Recover email sent succesfully</p> : <p>{error}</p> \n                            : <p>{error}</p>\n                        }\n                    </Form>\n                </FormWrapper>\n            )}\n            </Formik>\n        </RecoverContainer>\n    )\n}\n\nconst  mapStateToProps = ({ auth }) => ({\n    loading: auth.recoverPassword.loading,\n    error: auth.recoverPassword.error,\n})\n\nconst mapDispatchToProps = {\n    recoverPassword: actions.recoverPassword\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecoverPassword);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport * as actions from '../../../store/actions'\nimport Modal from '../../modal/modal';\n\nconst SignupContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 60px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 500px;\n    text-align: center;\n`;\n\nconst ProfileScheme = Yup.object().shape({\n    firstName: Yup.string()\n        .required('First name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    lastName: Yup.string()\n        .required('Last name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string().min(8, 'The password is too short'),\n    confirmPassword: Yup.string().when('password', {\n        is: password => password > 0,\n        then: Yup.string()\n            .required('You need to confirm your password')\n            .oneOf([Yup.ref('password'), null], 'Password doesnt match')\n    })\n});\n// console.log(ProfileScheme);\n\nconst Profile = ({ firebase, loading, error,  editProfile, cleanUp, loadingDeleteUser, errorDeleteUser, deleteUser}) => {\n\n    useEffect(() => {\n        return () => {\n            cleanUp();\n        };\n    }, [cleanUp])\n\n    const [modalOpened, setModalOpened] = useState(false);\n\n    //not getting the firstname and lastname because were not loaded at the time the \n    //component was rendered\n    if(!firebase.profile.isLoaded) return null;\n    \n    //and when the 'profile' isLoaded = true we will rerender again\n    return (\n        <SignupContainer>\n            <Formik \n                initialValues={{\n                    firstName: firebase.profile.firstName,\n                    lastName: firebase.profile.lastName,\n                    email: firebase.auth.email, \n                    password: '',\n                    confirmPassword: ''\n                }} \n                validationSchema={ProfileScheme} \n                // onSubmit={async (values, {setSubmitting}) => {\n                //     console.log(values);\n                //     await signUp(values);\n                //     setSubmitting(false);\n                // }}>\n                //error: Can't perform a React state update on an unmounted component. \n                onSubmit={(values, {setSubmitting}) => {\n                    // edit profile here\n                    // console.log(values)\n                    editProfile(values);\n                    setSubmitting(false);\n                }}>\n                {({isSubmitting, isValid}) => (\n                    <FormWrapper>\n                        <p>Edit Profile</p>\n                        <Form>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px', width: '100%'}}>\n                                <Field type='text' name='firstName' placeholder='Your first name..'/>\n                                <ErrorMessage name='firstName'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='text' name='lastName' placeholder='Your last name..'/>\n                                <ErrorMessage name='lastName'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='email' name='email' placeholder='Your email..'/>\n                                <ErrorMessage name='email'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='password' name='password' placeholder='Your password...'/>\n                                <ErrorMessage name='password'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='password' name='confirmPassword' placeholder='Confirm password...'/>\n                                <ErrorMessage name='confirmPassword'/>\n                            </div>\n                            <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Editing...' :'Submit'}</button>\n                            {/* {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>} */}\n                            {!error \n                            ? error === false ? <p>Edit profile succesfully</p> : <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p> \n                            : <p>{error}</p>\n                        }\n                        </Form>\n                        <p onClick={() => setModalOpened(true)}>Delete my account</p>\n                    </FormWrapper>\n                )}\n            </Formik>\n            <Modal opened={modalOpened} close={() => setModalOpened(false)}>\n                <h1>Delete account</h1>\n                <h3>Do you really want to delete your account?</h3>\n                <div style={{display: 'flex', width: '100%', justifyContent: 'space-evenly'}}>\n                    <button disabled={loadingDeleteUser} onClick={deleteUser}>{loadingDeleteUser ? 'Deleting...' :'YES'}</button>\n                    <button onClick={() => setModalOpened(false)}>Cancel</button>\n                </div>\n                {errorDeleteUser && <p style={{color: 'red', fontWeight: '800'}}>{errorDeleteUser}</p>}\n            </Modal>\n        </SignupContainer>\n    )\n}\n\nconst mapStateToProps = ({ firebase, auth}) => ({\n    firebase,\n    loading: auth.profileEdit.loading,\n    error: auth.profileEdit.error,\n    loadingDeleteUser: auth.deleteUser.loading,\n    errorDeleteUser: auth.deleteUser.error\n\n})\n\nconst mapDispatchToProps = {\n    editProfile: actions.editProfile,\n    cleanUp: actions.clean,\n    deleteUser: actions.deleteUser\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './layout/layout';\nimport Home from './components/home/home';\nimport Todos from './components/todos/todos';\nimport Login from './components/auth/login/login';\nimport Sigunp from './components/auth/signup/signup'\nimport Logout from './components/auth/logout/logout';\nimport VerifyEmail from './components/auth/verifyEmail/verifyEmail';\nimport RecoverPassword from './components/auth/recoverPassword/recoverPassword';\nimport Profile from './components/auth/profile/profile';\n\n\nfunction App({ loggedIn, emailVerified }) {\n  // console.log(`email verified: ${emailVerified}`);\n  // console.log(`logged in: ${loggedIn}`);\n\n  let routes;\n\n  if(loggedIn && !emailVerified){\n    routes = (\n      <Switch>\n        <Route exact path='/todos-locos/verify-email' component={VerifyEmail}/>\n        <Route exact path='/todos-locos/logout' component={Logout} />\n        <Redirect to = '/todos-locos/verify-email'/>\n      </Switch>\n    )\n  }else if(loggedIn && emailVerified){\n    routes = (\n        <Switch>\n          <Route exact path='/todos-locos/' component={Todos} />\n          <Route exact path='/todos-locos/logout' component={Logout} />\n          <Route exact path='/todos-locos/profile' component={Profile} />\n          <Redirect to = '/todos-locos'/>\n        </Switch>\n    )\n  }else{\n    routes = (\n        <Switch>\n          <Route exact path='/todos-locos/login' component={Login} />\n          <Route exact path='/todos-locos/signup' component={Sigunp} />\n          <Route exact path='/todos-locos/recover-password' component={RecoverPassword}/>\n          <Redirect to = '/todos-locos/login'/>\n        </Switch>\n    )\n  }\n\n  return (\n    <BrowserRouter>\n      <Layout>{routes}</Layout>\n    </BrowserRouter>\n  )\n}\n\nconst mapStateToProps = ({ firebase}) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: \"to-dos-locos.firebaseapp.com\",\n    databaseURL: \"https://to-dos-locos.firebaseio.com\",\n    projectId: \"to-dos-locos\",\n    storageBucket: \"to-dos-locos.appspot.com\",\n    messagingSenderId: \"994852635401\",\n    appId: \"1:994852635401:web:19415303577f90ed7a09d8\",\n    measurementId: \"G-VRLZKMGPR4\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;","import * as actions from '../actions/actionTypes'\n\nconst initialState = { \n    error: null, \n    loading: false,\n    verifyEmail: {\n        error: null, \n        loading: false\n    },\n    recoverPassword: {\n        error: null, \n        loading: false\n    },\n    profileEdit: {\n        error: null, \n        loading: false\n    },\n    deleteUser: {\n        error: null, \n        loading: false\n    },\n};\n\n//helper functions\nconst authStart = state => {\n    return { ...state, loading: true }\n}   \n\nconst authEnd = state => {\n    return { ...state, loading: false }\n}\n\nconst authFail = (state, payload) => {\n    return  { ...state, error: payload }\n}\n\nconst authSuccess = state => {\n    return { ...state, error: false }\n}\n\nconst verifyStart = state => {\n    return { \n        ...state,\n        verifyEmail: { ...state.verifyEmail, loading: true } \n    };\n}\n\nconst verifySuccess = state => {\n    return {\n        ...state,\n        verifyEmail: { ...state.verifyEmail, loading: false, error: false }\n    }\n}\n\nconst verifyFail = (state, payload) => {\n    return {\n        ...state, \n        verifyEmail: { ...state.verifyEmail, loading: false, error: payload }\n    }\n}\n\nconst recoveryStart = state => {\n    return {\n        ...state, \n        recoverPassword: { ...state.recoverPassword, loading: true }\n    }\n}\n\nconst recoverySuccess = state => {\n    return {\n        ...state, \n        recoverPassword: {\n            ...state.recoverPassword, \n            loading: false, \n            error: false\n        }\n    }\n}\n\nconst recoveryFail = (state, payload) => {\n    return {\n        ...state, \n        recoverPassword: {\n            ...state.recoverPassword,\n            loading: false, \n            error: payload\n        }\n    }\n}\n\nconst profileEditStart = state => {\n    return {\n        ...state, \n        profileEdit: {\n            ...state.profileEdit,\n            loading: true\n        }\n    }\n}\n\nconst profileEditSuccess = state => {\n    return {\n        ...state, \n         profileEdit: {\n             ...state.profileEdit, \n             loading: false, \n             error: false\n         }\n    }\n}\n\nconst profileEditFail = (state, payload) => {\n    return {\n        ...state, \n        profileEdit: {\n            ...state.profileEdit,\n            loading: false, \n            error: payload\n        }\n    }\n}\n\nconst deleteStart = state => {\n    return {\n        ...state,\n        deleteUser: {\n            ...state.deleteUser, \n            loading: true\n        }\n    }\n}\n\nconst deleteFail = (state, payload) => {\n    return {\n        ...state, \n        deleteUser: {\n            ...state.deleteUser, \n            loading: false, \n            error: payload\n        }\n    }\n}\n\n\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actions.AUTH_START:\n            return authStart(state);\n            \n        case actions.AUTH_SUCCESS:\n            return authSuccess(state);\n                \n        case actions.AUTH_END:\n            return authEnd(state);\n            \n        case actions.AUTH_FAIL:\n            return authFail(state, action.payload);\n                \n        case actions.CLEAN_UP:{\n            return {\n                ...state, \n                error: null,\n                loading: false,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    loading: false,\n                    error: null\n                },\n                recoverPassword: {\n                    ...state.recoverPassword,\n                    loading: false, \n                    error: null\n                },\n                profileEdit: {\n                    ...state.profileEdit,\n                    loading: false, \n                    error: null\n                },\n                deleteUser: {\n                    ...state.deleteUser,\n                    loading: false, \n                    error: null\n                }\n            }\n        }\n        case actions.VERIFY_START:\n            return verifyStart(state)\n    \n        case actions.VERIFY_SUCCESS: \n            return verifySuccess(state);\n\n        case actions.VERIFY_FAIL: \n            return verifyFail(state, action.payload);\n\n        case actions.RECOVERY_START: \n            return recoveryStart(state);\n\n        case actions.RECOVERY_SUCCESS: \n            return recoverySuccess(state);\n            \n        case actions.RECOVERY_FAIL: \n            return recoveryFail(state, action.payload);\n\n        case actions.PROFILE_EDIT_START:\n            return profileEditStart(state);\n            \n        case actions.PROFILE_EDIT_SUCCESS:\n            return profileEditSuccess(state);\n            \n        case actions.PROFILE_EDIT_FAIL:\n            return profileEditFail(state, action.payload);\n            \n        case actions.DELETE_USER_START:\n            return deleteStart(state);\n            \n        case actions.DELETE_USER_FAIL:\n            return deleteFail(state, action.payload);\n\n        default:\n            return state;\n    }\n}\nexport default authReducer;\n\n","import * as actions from '../actions/actionTypes';\n\nconst initialState = {\n    error: null, \n    loading: false\n}\n\nconst todosReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actions.ADD_TODO_START: \n            return {\n                ...state,\n                loading: true,\n            }\n        case actions.ADD_TODO_SUCCESS: \n            return {\n                ...state,\n                loading: false,\n                error: false\n            }\n        case actions.ADD_TODO_FAIL:\n            return {\n                ...state, \n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default todosReducer;","import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from  'redux-firestore';\n\nimport authReducer from './authReducer';\nimport todosReducer from './todosReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    todos: todosReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n}); ","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport firebase from '../Firebase/firebase'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\n\nimport rootReducer from './reducers/rootReducer'; \n\n// const rrfConfig = {\n//     userProfile: 'users',\n//     useFirestoreForProfile: true \n//   }\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        // reactReduxFirebase(firebase, rrfConfig),\n        reduxFirestore(firebase), // SOLUTION TO ERROR--> Firebase instance does not yet exist\n        // applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))) \n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})))\n        // applyMiddleware(thunk))\n) ;\n\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\n\nimport firebase from './Firebase/firebase';\nimport store from './store'\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, \n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
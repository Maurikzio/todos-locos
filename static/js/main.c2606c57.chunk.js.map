{"version":3,"sources":["components/logo/logo.js","components/navbar/navbar.js","layout/layout.js","components/home/home.js","components/todos/todos.js","components/auth/login/login.js","components/auth/signup/signup.js","store/actions/authActions.js","store/actions/actionTypes.js","App.js","serviceWorker.js","Firebase/firebase.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["LogoWrapper","styled","div","Logo","NavWrapper","Nav","nav","NavItems","ul","Navbar","to","MainWrapper","Layout","children","console","log","Fragment","Home","Todos","LoginContainer","FormWrapper","LoginScheme","Yup","shape","email","required","password","Login","initialValues","validationSchema","onSubmit","values","setSubmitting","isSubmitting","isValid","style","display","flexDirection","height","type","name","placeholder","disabled","SignupContainer","SignupScheme","firstName","min","max","lastName","confirmPassword","oneOf","mapDispatchToProps","signUp","data","dispatch","getState","a","getFirebase","getFirestore","firebase","firestore","auth","createUserWithEmailAndPassword","res","collection","doc","user","uid","set","payload","message","connect","loading","error","width","backgroundColor","color","App","exact","path","component","Sigunp","Boolean","window","location","hostname","match","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initialState","authReducer","state","action","combineReducers","firebaseReducer","composeEnhancers","compose","store","createStore","rootReducer","reduxFirestore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c2606c57.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst LogoWrapper = styled.div`\n    padding: 10px;\n    font-weight: 800;\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    width: 100%;\n`;\n\n\nconst Logo = () => {\n    return (\n        <LogoWrapper>\n            ToDos Locos\n        </LogoWrapper>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../logo/logo';\nimport { NavLink } from 'react-router-dom';\n\n \nconst NavWrapper = styled.div`\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 60px;\n    background-color: orange; \n    display: flex;\n    padding: 0 20px;\n`\n\nconst Nav = styled.nav`\n    display: flex;\n    flex-grow: 1;\n    width: 100%;\n`;\n\nconst NavItems = styled.ul` \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding-left: 0px;\n    width: 100%;\n    li{\n        display: flex;\n        padding: 0 15px;\n        font-weight: 800;\n        a{\n            text-decoration: none;\n            color: black;\n        }\n    }\n`;\n\nconst Navbar = () => {\n    return(\n        <NavWrapper>\n            <Logo/>\n            <Nav>\n                <NavItems>\n                    <li>\n                        <NavLink to=\"/todos-locos\">Home</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/todos-locos/todos\">Todos</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to='/todos-locos/login'>Login</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to='/todos-locos/signup'>Signup</NavLink>\n                    </li>\n                </NavItems>\n            </Nav>\n        </NavWrapper>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nimport styled from 'styled-components'\nimport Navbar from '../components/navbar/navbar';\n\n\nconst MainWrapper = styled.div`\n    width: 100%;\n    margin-top: 60px;\n`\n\nconst Layout = ({ children }) => {\n    console.log(children);\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <MainWrapper>\n                {children} \n            </MainWrapper>\n        </React.Fragment>\n    )\n}\n\nexport default Layout;","import React from 'react';\n\nconst Home = () => {\n    return(\n        <h1>You are in Homepage...</h1>\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst Todos = () => {\n    return (\n        <h1>You are in todos page..</h1>\n    )\n}\n\nexport default Todos;","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\n\nconst LoginContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    width: 500px;\n`;\n\nconst LoginScheme = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n});\n\nconst Login = () => {\n    return(\n        <LoginContainer>\n        <Formik initialValues={{email: '', password: ''}} validationSchema={LoginScheme} onSubmit={(values, {setSubmitting}) => console.log(values)}>\n            {({isSubmitting, isValid}) => (\n                <FormWrapper>\n                    <p>Login</p>    \n                    <Form>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='email' name='email' placeholder='Your email..'/>\n                            <ErrorMessage name='email'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='passowrd' name='password' placeholder='Your password...'/>\n                            <ErrorMessage name='password'/>\n                        </div>\n                        <button disabled={!isValid} type='submit'>Submit</button>\n                    </Form>\n                </FormWrapper>\n            )}\n        </Formik>\n        </LoginContainer>\n    )\n}\n\nexport default Login;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions'\n\n\nconst SignupContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 60px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 500px;\n    text-align: center;\n`;\n\nconst SignupScheme = Yup.object().shape({\n    firstName: Yup.string()\n        .required('First name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    lastName: Yup.string()\n        .required('Last name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'The password is too short'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Password doesnt match')\n        .required('You need to confirm your password')\n});\n\nconst Signup = ({ signUp, loading, error }) => {\n    return(\n        <SignupContainer>\n        <Formik \n            initialValues={{\n                firstName: '',\n                lastName: '',\n                email: '', \n                password: '',\n                confirmPassword: ''\n            }} \n            validationSchema={SignupScheme} \n            onSubmit={async (values, {setSubmitting}) => {\n                console.log(values);\n                await signUp(values);\n                setSubmitting(false);\n            }}>\n            {({isSubmitting, isValid}) => (\n                <FormWrapper>\n                    <p>Sign up</p>\n                    <Form>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px', width: '100%'}}>\n                            <Field type='text' name='firstName' placeholder='Your first name..'/>\n                            <ErrorMessage name='firstName'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='text' name='lastName' placeholder='Your last name..'/>\n                            <ErrorMessage name='lastName'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='email' name='email' placeholder='Your email..'/>\n                            <ErrorMessage name='email'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='password' name='password' placeholder='Your password...'/>\n                            <ErrorMessage name='password'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='password' name='confirmPassword' placeholder='Confirm password...'/>\n                            <ErrorMessage name='confirmPassword'/>\n                        </div>\n                        <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Signing up...' :'Submit'}</button>\n                        {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>}\n                    </Form>\n                </FormWrapper>\n            )}\n        </Formik>\n        </SignupContainer>\n    )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error\n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import * as actions from './actionTypes'\n\nexport const signUp = data => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        dispatch({type: actions.AUTH_START})\n        try{\n            const res = await firebase\n                .auth()\n                .createUserWithEmailAndPassword(data.email, data.password);\n                console.log(res);\n\n            await firestore\n                .collection('users')\n                .doc(res.user.uid)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                })\n            dispatch({ type: actions.AUTH_SUCCESS})    \n        } catch(err){\n            dispatch({ type: actions.AUTH_FAIL, payload: err.message })\n            console.log('Somwthing wrong happened: ', err.message);\n        }\n        dispatch({type: actions.AUTH_END})\n    }\n} ","export const AUTH_START = 'AUTH_START';\nexport const AUTH_END = 'AUTH_END';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Layout from './layout/layout';\nimport Home from './components/home/home';\nimport Todos from './components/todos/todos';\nimport Login from './components/auth/login/login';\nimport Sigunp from './components/auth/signup/signup'\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout/>\n      <Switch>\n        <Route exact path='/todos-locos' component={Home} />\n        <Route path='/todos-locos/todos' component={Todos} />\n        <Route path='/todos-locos/login' component={Login} />\n        <Route path='/todos-locos/signup' component={Sigunp} />\n        <Redirect to = '/todos-locos'/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: \"to-dos-locos.firebaseapp.com\",\n    databaseURL: \"https://to-dos-locos.firebaseio.com\",\n    projectId: \"to-dos-locos\",\n    storageBucket: \"to-dos-locos.appspot.com\",\n    messagingSenderId: \"994852635401\",\n    appId: \"1:994852635401:web:19415303577f90ed7a09d8\",\n    measurementId: \"G-VRLZKMGPR4\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;","import * as actions from '../actions/actionTypes'\n\nconst initialState = { \n    error: null, \n    loading: false,\n};\n\nconst authReducer = (state =  initialState, action) => {\n    switch(action.type){\n        case actions.AUTH_START:\n            return {\n                ...state, \n                loading: true\n            }\n        case actions.AUTH_END:\n            return {\n                ...state, \n                loading: false\n            }\n        case actions.AUTH_SUCCESS:\n            return {\n                ...state, \n                error: false\n            }\n        case actions.AUTH_FAIL:\n            return {\n                ...state, \n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default authReducer;\n\n","import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    firebase: firebaseReducer\n});","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport firebase from '../Firebase/firebase'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\n\nimport rootReducer from './reducers/rootReducer'; \n\n// const rrfConfig = {\n//     userProfile: 'users',\n//     useFirestoreForProfile: true \n//   }\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        // reactReduxFirebase(firebase, rrfConfig),\n        reduxFirestore(firebase), // SOLUTION TO ERROR--> Firebase instance does not yet exist\n        // applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))) \n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})))\n        // applyMiddleware(thunk))\n) ;\n\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\n\nimport firebase from './Firebase/firebase';\nimport store from './store'\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true \n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance \n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/logo/logo.js","components/navbar/navbar.js","components/loader/loader.js","layout/layout.js","components/todos/todos.js","store/actions/authActions.js","store/actions/actionTypes.js","components/auth/login/login.js","components/auth/signup/signup.js","components/auth/logout/logout.js","components/auth/verifyEmail/verifyEmail.js","components/auth/recoverPassword/recoverPassword.js","App.js","serviceWorker.js","Firebase/firebase.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["LogoWrapper","styled","div","Logo","NavWrapper","Nav","nav","NavItems","ul","Navbar","links","loggedIn","uid","to","Spiner","Loader","MainWrapper","LoaderContainer","connect","firebase","auth","authIsLoaded","isLoaded","children","Fragment","Todos","clean","type","LoginContainer","FormWrapper","Recover","LoginScheme","Yup","shape","email","required","password","min","mapDispatchToProps","login","data","dispatch","getState","a","getFirebase","signInWithEmailAndPassword","console","log","message","payload","cleanUp","actions","loading","error","useEffect","initialValues","validationSchema","onSubmit","values","setSubmitting","isSubmitting","isValid","style","display","flexDirection","height","name","placeholder","disabled","backgroundColor","color","SignupContainer","SignupScheme","firstName","max","lastName","confirmPassword","oneOf","signUp","getFirestore","firestore","createUserWithEmailAndPassword","res","user","currentUser","sendEmailVerification","collection","doc","set","width","logout","signOut","mapDispacthToProps","sendVerification","verifyEmail","onClick","RecoverSchema","RecoverContainer","recoverPassword","sendPasswordResetEmail","emailVerified","routes","exact","path","component","VerifyEmail","Logout","Login","Sigunp","RecoverPassword","Boolean","window","location","hostname","match","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initialState","authReducer","state","action","combineReducers","firebaseReducer","composeEnhancers","compose","store","createStore","rootReducer","reduxFirestore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fed2dc05.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst LogoWrapper = styled.div`\n    padding: 10px;\n    font-weight: 800;\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    width: 100%;\n`;\n\n\nconst Logo = () => {\n    return (\n        <LogoWrapper>\n            ToDos Locos\n        </LogoWrapper>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../logo/logo';\nimport { NavLink } from 'react-router-dom';\n\n \nconst NavWrapper = styled.div`\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 60px;\n    background-color: orange; \n    display: flex;\n    padding: 0 20px;\n`\n\nconst Nav = styled.nav`\n    display: flex;\n    flex-grow: 1;\n    width: 100%;\n`;\n\nconst NavItems = styled.ul` \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding-left: 0px;\n    width: 100%;\n    li{\n        display: flex;\n        padding: 0 15px;\n        font-weight: 800;\n        a{\n            text-decoration: none;\n            color: black;\n        }\n    }\n`;\n\nconst Navbar = ({ loggedIn }) => {\n    let links;\n    if(loggedIn.uid){\n        links = ( \n            <NavItems>\n                {/* <li>\n                    <NavLink to=\"/todos-locos\">Home</NavLink>\n                </li> */}\n                <li>\n                    <NavLink to=\"/todos-locos\">Todos</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/todos-locos/logout'>Logout</NavLink>\n                </li>\n            </NavItems>\n        )\n    }else{\n        links = (\n            <NavItems>\n                {/* <li>\n                    <NavLink to=\"/todos-locos\">Home</NavLink>\n                </li> */}\n                {/* <li>\n                    <NavLink to=\"/todos-locos\">Todos</NavLink>\n                </li> */}\n                <li>\n                    <NavLink to='/todos-locos/login'>Login</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/todos-locos/signup'>Signup</NavLink>\n                </li>\n            </NavItems>\n        )\n    }\n    return(\n        <NavWrapper>\n            <Logo/>\n            <Nav>{links}</Nav>\n        </NavWrapper>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Spiner = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n    & div{\n        position: absolute;\n        border: 4px solid orange;\n        opacity: 1;\n        border-radius: 50%;\n        animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n        &:nth-child(2){\n            animation-delay: -0.5s;\n        }\n    }\n    /* & div:nth-child(2){\n        animation-delay: -0.5s;\n    } */\n    @keyframes lds-ripple {\n    0% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 1;\n    }\n    100% {\n        top: 0px;\n        left: 0px;\n        width: 72px;\n        height: 72px;\n        opacity: 0;\n    }\n    }\n`\n\nconst Loader = () => {\n    return(\n        <Spiner>\n            <div></div>\n            <div></div>\n        </Spiner>\n    )\n};\n\nexport default Loader;","import React from 'react';\nimport styled from 'styled-components'\nimport Navbar from '../components/navbar/navbar';\n\nimport { connect } from 'react-redux';\nimport Loader from '../components/loader/loader';\n\nconst MainWrapper = styled.div`\n    width: 100%;\n    margin-top: 60px;\n    height: 100%;\n`\n\nconst LoaderContainer = styled.div`\n    height: calc(100% + 60px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Layout = ({ children, loggedIn, authIsLoaded }) => {\n    // console.log(children);\n    // console.log(`is logged in: ${JSON.stringify(loggedIn,null, 2)}`);\n    // console.log(`is loaded: ${authIsLoaded}`);\n    if(!authIsLoaded) return <LoaderContainer><Loader/></LoaderContainer>\n    return (\n        <React.Fragment>\n            <Navbar loggedIn={loggedIn}/>\n            <MainWrapper>{children}</MainWrapper>\n        </React.Fragment>\n    )\n};\n\nconst mapStateToProps = ({firebase}) => ({\n    loggedIn: firebase.auth,\n    authIsLoaded: firebase.auth.isLoaded\n})\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\n\nconst Todos = () => {\n    return (\n        <h1>You are in todos page..</h1>\n    )\n}\n\nexport default Todos;","import * as actions from './actionTypes'\n\n//singup action creator\nexport const signUp = data => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        dispatch({type: actions.AUTH_START})\n        try{\n            const res = await firebase\n                .auth()\n                .createUserWithEmailAndPassword(data.email, data.password);\n                // console.log(res);\n\n            //send verification email\n            const user = firebase.auth().currentUser;\n            await  user.sendEmailVerification()\n\n            await firestore\n                .collection('users')\n                .doc(res.user.uid)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                })\n            dispatch({ type: actions.AUTH_SUCCESS})    \n        } catch(err){\n            dispatch({ type: actions.AUTH_FAIL, payload: err.message })\n            // console.log('Somwthing wrong happened: ', err.message);\n        }\n        dispatch({type: actions.AUTH_END})\n    }\n};\n\n//logout action creator\nexport const signOut = () => {\n    return async (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        try{\n            await firebase.auth().signOut();\n        }catch(err){\n            console.log(err.message);\n        }\n    }\n}\n\n//login action creator\nexport const signIn = (data) => {\n    return async (dispatch, getState, { getFirebase}) => {\n        const firebase = getFirebase();\n        dispatch({type: actions.AUTH_START})\n        try{\n            await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\n            dispatch({ type: actions.AUTH_SUCCESS})  \n        }catch(err){\n            console.log(err.message);\n            dispatch({ type: actions.AUTH_FAIL, payload: err.message })\n        }\n        dispatch({type: actions.AUTH_END})\n    }\n};\n\n//clean up error messages \nexport const clean = () => {\n    return ({ type: actions.CLEAN_UP })\n};\n\n//verify email action\nexport const verifyEmail = () => {\n    return async (dispatch, getState,  { getFirebase }) => {\n        const firebase = getFirebase();\n        dispatch({ type: actions.VERIFY_START })\n        try {\n            const user = firebase.auth().currentUser;\n            await user.sendEmailVerification();\n            dispatch({ type: actions.VERIFY_SUCCESS })\n        }catch(err){\n            console.log(err.message);\n            dispatch({ type: actions.VERIFY_FAIL, payload: err.message })\n        }\n    }\n}\n\n//send recovery password\nexport const recoverPassword = (data) => { \n    return async (dispatch, getState,  { getFirebase }) => {\n        const firebase = getFirebase();\n        dispatch({ type: actions.RECOVERY_START})\n        try {\n            await firebase.auth().sendPasswordResetEmail(data.email);\n            dispatch({ type: actions.RECOVERY_SUCCESS})\n        }catch(err){\n            dispatch({ type: actions.RECOVERY_FAIL, payload: err.message })\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_END = 'AUTH_END';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const CLEAN_UP = 'CLEAN_UP';\n\nexport const VERIFY_START = 'VERIFY_START';\nexport const VERIFY_SUCCESS = 'VERIFY_SUCCESS';\nexport const VERIFY_FAIL = 'VERIFY_FAIL';\n\nexport const RECOVERY_START = 'RECOVERY_START';\nexport const RECOVERY_SUCCESS = 'RECOVERY_SUCCESS';\nexport const RECOVERY_FAIL = 'RECOVERY_FAIL';","import React, { useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../store/actions'\nimport { NavLink } from 'react-router-dom';\n\nconst LoginContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    width: 500px;\n`;\n\nconst Recover = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    & a {\n        align-self: center;\n        text-decoration: none;\n        margin-left: 3px;\n    }\n`;\n\nconst LoginScheme = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'Too short password')\n});\n\nconst Login = ({loading, error, login, cleanUp}) => {\n    useEffect(() => {\n        //when mounts\n        \n        //when unmounts\n        return() => {\n            cleanUp();\n        }\n    },[cleanUp])\n    return(\n        <LoginContainer>\n        <Formik \n            initialValues={{email: '', password: ''}} \n            validationSchema={LoginScheme} \n            // onSubmit={async (values, {setSubmitting}) =>{ //this is causing an error: Can't perform a React state update on an unmounted component.This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n            //     await login(values);\n            //     setSubmitting(false)\n            // }}>\n            onSubmit={ (values, {setSubmitting}) =>{\n                login(values);\n                setSubmitting(false)\n            }}>\n            {({isSubmitting, isValid}) => (\n                <FormWrapper>\n                    <p>Login</p>    \n                    <Form>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='email' name='email' placeholder='Your email..'/>\n                            <ErrorMessage name='email'/>\n                        </div>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                            <Field type='password' name='password' placeholder='Your password...'/>\n                            <ErrorMessage name='password'/>\n                        </div>\n                        <div style={{display: 'flex'}}>\n                            <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Loggin in...' :'Login'}</button>\n                            <Recover>\n                                <NavLink to='/todos-locos/recover-password'>Recover password</NavLink>\n                            </Recover>\n                        </div>\n                        \n                        {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>}\n                    </Form>\n                </FormWrapper>\n            )}\n        </Formik>\n        </LoginContainer>\n    )\n}\n\nconst mapStateToProps = ({auth}) => ({\n    loading: auth.loading,\n    error: auth.error\n})\n\nconst mapDispatchToProps = {\n    login: actions.signIn,\n    cleanUp: actions.clean\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions'\n\n\nconst SignupContainer = styled.div`\n    /* background-color: red; */\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 60px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 500px;\n    text-align: center;\n`;\n\nconst SignupScheme = Yup.object().shape({\n    firstName: Yup.string()\n        .required('First name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    lastName: Yup.string()\n        .required('Last name is required')\n        .min(3, 'Too short')\n        .max(25, 'Too long'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'The password is too short'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Password doesnt match')\n        .required('You need to confirm your password')\n});\n\nconst Signup = ({ signUp, loading, error, cleanUp }) => {\n    useEffect(() => {\n        //when mounts\n\n        //when unmounts\n        // return() => {\n            cleanUp();\n        // }\n    },[cleanUp])\n    return(\n        <SignupContainer>\n            <Formik \n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    email: '', \n                    password: '',\n                    confirmPassword: ''\n                }} \n                validationSchema={SignupScheme} \n                // onSubmit={async (values, {setSubmitting}) => {\n                //     console.log(values);\n                //     await signUp(values);\n                //     setSubmitting(false);\n                // }}>\n                //error: Can't perform a React state update on an unmounted component. \n                onSubmit={(values, {setSubmitting}) => {\n                    // console.log(values);\n                    signUp(values);\n                    setSubmitting(false);\n                }}>\n                {({isSubmitting, isValid}) => (\n                    <FormWrapper>\n                        <p>Sign up</p>\n                        <Form>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px', width: '100%'}}>\n                                <Field type='text' name='firstName' placeholder='Your first name..'/>\n                                <ErrorMessage name='firstName'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='text' name='lastName' placeholder='Your last name..'/>\n                                <ErrorMessage name='lastName'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='email' name='email' placeholder='Your email..'/>\n                                <ErrorMessage name='email'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='password' name='password' placeholder='Your password...'/>\n                                <ErrorMessage name='password'/>\n                            </div>\n                            <div style={{display: 'flex', flexDirection: 'column', height: '40px'}}>\n                                <Field type='password' name='confirmPassword' placeholder='Confirm password...'/>\n                                <ErrorMessage name='confirmPassword'/>\n                            </div>\n                            <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Signing up...' :'Submit'}</button>\n                            {error && <p style={{ backgroundColor: 'red', color: 'white'}}>{error}</p>}\n                        </Form>\n                    </FormWrapper>\n                )}\n            </Formik>\n        </SignupContainer>\n    )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error\n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp,\n    cleanUp: actions.clean\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions' //has index.js so!\n\nconst Logout = ({ logout }) => {\n    useEffect(() => {\n        logout()\n    }, [logout])\n\n    return null;\n}\n\nconst mapDispatchToProps = {\n    logout: actions.signOut\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions'\n\nconst VerifyEmail = ({ error, loading, sendVerification, cleanUp }) => {\n    // console.log(error);\n    useEffect(() => {\n        //when component mounts\n\n        return () => { //when component unmounts\n            cleanUp()\n        }\n    }, [cleanUp])\n    return(\n        <div>\n        <h2>You are not verified...</h2>\n        <p>Go to your mail inbox and pls verify the email..</p>\n        <button disabled={loading} onClick={sendVerification}>{ loading ? \"Sending email...\" : \"Re-send verification email...\"}</button>\n        {!error \n            ? error === false ? <p>Message sent succesfully</p> : <p>{error}</p> \n            : <p>{error}</p>\n        }\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => ({\n    loading: auth.verifyEmail.loading,\n    error: auth.verifyEmail.error\n})\n\nconst mapDispacthToProps = {\n    sendVerification: actions.verifyEmail,\n    cleanUp: actions.clean\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(VerifyEmail); ","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions';\n\nconst RecoverSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required')\n});\n\nconst RecoverContainer = styled.div`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\nconst FormWrapper = styled.div`\n    border-radius: 10px;\n    box-shadow: 0 5px 5px rgba(255, 165, 0,  .5);\n    padding: 30px 60px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 500px;\n    text-align: center;\n`;\n\nconst RecoverPassword = ({loading, error, recoverPassword}) => {\n    // console.log(error);\n    return(\n        <RecoverContainer>\n            <Formik\n                initialValues={{ email: '' }}\n                validationSchema = {RecoverSchema}\n                onSubmit={(values, {setSubmitting}) => {\n                    // console.log('Send email to recover')\n                    recoverPassword(values)\n                    setSubmitting(false)\n                }}\n            >\n            {({isSubmitting, isValid}) => (\n                <FormWrapper>\n                    <h2>Recover password</h2>\n                    <Form>\n                        <div style={{display: 'flex', flexDirection: 'column', height: '40px', width: '100%'}}>\n                            <Field type='email' name='email' placeholder='Enter email...'/>\n                            <ErrorMessage name='email'/>\n                        </div>\n                        <button disabled={!isValid || isSubmitting} type='submit'>{loading ? 'Sending recover email..' :'Recover email'}</button>\n                        {!error \n                            ? error === false ? <p>Recover email sent succesfully</p> : <p>{error}</p> \n                            : <p>{error}</p>\n                        }\n                    </Form>\n                </FormWrapper>\n            )}\n            </Formik>\n        </RecoverContainer>\n    )\n}\n\nconst  mapStateToProps = ({ auth }) => ({\n    loading: auth.recoverPassword.loading,\n    error: auth.recoverPassword.error,\n})\n\nconst mapDispatchToProps = {\n    recoverPassword: actions.recoverPassword\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecoverPassword);","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './layout/layout';\nimport Home from './components/home/home';\nimport Todos from './components/todos/todos';\nimport Login from './components/auth/login/login';\nimport Sigunp from './components/auth/signup/signup'\nimport Logout from './components/auth/logout/logout';\nimport VerifyEmail from './components/auth/verifyEmail/verifyEmail';\nimport RecoverPassword from './components/auth/recoverPassword/recoverPassword';\n\n\nfunction App({ loggedIn, emailVerified }) {\n  // console.log(`email verified: ${emailVerified}`);\n  // console.log(`logged in: ${loggedIn}`);\n\n  let routes;\n\n  if(loggedIn && !emailVerified){\n    routes = (\n      <Switch>\n        <Route exact path='/todos-locos/verify-email' component={VerifyEmail}/>\n        <Route exact path='/todos-locos/logout' component={Logout} />\n        <Redirect to = '/todos-locos/verify-email'/>\n      </Switch>\n    )\n  }else if(loggedIn && emailVerified){\n    routes = (\n        <Switch>\n          <Route exact path='/todos-locos/' component={Todos} />\n          <Route exact path='/todos-locos/logout' component={Logout} />\n          <Redirect to = '/todos-locos'/>\n        </Switch>\n    )\n  }else{\n    routes = (\n        <Switch>\n          <Route exact path='/todos-locos/login' component={Login} />\n          <Route exact path='/todos-locos/signup' component={Sigunp} />\n          <Route exact path='/todos-locos/recover-password' component={RecoverPassword}/>\n          <Redirect to = '/todos-locos/login'/>\n        </Switch>\n    )\n  }\n\n  return (\n    <BrowserRouter>\n      <Layout>{routes}</Layout>\n    </BrowserRouter>\n  )\n}\n\nconst mapStateToProps = ({ firebase}) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: \"to-dos-locos.firebaseapp.com\",\n    databaseURL: \"https://to-dos-locos.firebaseio.com\",\n    projectId: \"to-dos-locos\",\n    storageBucket: \"to-dos-locos.appspot.com\",\n    messagingSenderId: \"994852635401\",\n    appId: \"1:994852635401:web:19415303577f90ed7a09d8\",\n    measurementId: \"G-VRLZKMGPR4\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;","import * as actions from '../actions/actionTypes'\n\nconst initialState = { \n    error: null, \n    loading: false,\n    verifyEmail: {\n        error: null, \n        loading: false\n    },\n    recoverPassword: {\n        error: null, \n        loading: false\n    },\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actions.AUTH_START:\n            return {\n                ...state, \n                loading: true\n            }\n        case actions.AUTH_END:\n            return {\n                ...state, \n                loading: false\n            }\n        case actions.AUTH_SUCCESS:\n            return {\n                ...state, \n                error: false\n            }\n        case actions.AUTH_FAIL:\n            return {\n                ...state, \n                error: action.payload\n            }\n        case actions.CLEAN_UP:{\n            return {\n                ...state, \n                error: null,\n                loading: false,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    loading: false,\n                    error: null\n                },\n                recoverPassword: {\n                    ...state.recoverPassword,\n                    loading: false, \n                    error: null\n                }\n            }\n        }\n        case actions.VERIFY_START:\n            return{\n                ...state,\n                verifyEmail: {\n                    ...state.verifyEmail, \n                    loading: true\n                }\n            }\n        case actions.VERIFY_SUCCESS: \n            return {\n                ...state,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    loading: false,\n                    error: false\n                }\n            }\n        case actions.VERIFY_FAIL: \n            return {\n                ...state,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    loading: false,\n                    error: action.payload\n                }\n            }\n        case actions.RECOVERY_START: \n            return {\n                ...state,\n                recoverPassword: {\n                    ...state.recoverPassword, \n                    loading: true\n                }\n            }\n        case actions.RECOVERY_SUCCESS: \n            return {\n                ...state,\n                recoverPassword: {\n                    ...state.recoverPassword, \n                    loading: false, \n                    error: false\n                }\n            }\n        case actions.RECOVERY_FAIL: \n            return {\n                ...state,\n                recoverPassword: {\n                    ...state.recoverPassword, \n                    loading: false, \n                    error: action.payload\n                }\n            }\n        default:\n            return state;\n    }\n}\nexport default authReducer;\n\n","import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    firebase: firebaseReducer\n});","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport firebase from '../Firebase/firebase'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\n\nimport rootReducer from './reducers/rootReducer'; \n\n// const rrfConfig = {\n//     userProfile: 'users',\n//     useFirestoreForProfile: true \n//   }\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        // reactReduxFirebase(firebase, rrfConfig),\n        reduxFirestore(firebase), // SOLUTION TO ERROR--> Firebase instance does not yet exist\n        // applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))) \n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})))\n        // applyMiddleware(thunk))\n) ;\n\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\n\nimport firebase from './Firebase/firebase';\nimport store from './store'\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, \n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}